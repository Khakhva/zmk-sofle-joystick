#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        Minus {
            bindings = <&kp MINUS>;
            key-positions = <34 35>;
        };

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <35 36>;
        };

        Copy {
            bindings = <&kp LC(C)>;
            key-positions = <17 18>;
            layers = <0>;
        };

        Paste {
            bindings = <&kp LC(V)>;
            key-positions = <43 44>;
            layers = <0>;
        };

        LDelete {
            bindings = <&kp DELETE>;
            key-positions = <0 1>;
        };

        Clipboard {
            bindings = <&kp LG(V)>;
            key-positions = <53 54>;
            layers = <0>;
        };

        Move_to_Next_Monitor {
            bindings = <&kp LG(LS(LEFT_ARROW))>;
            key-positions = <63 62>;
        };

        Task_Manager {
            bindings = <&kp LC(LS(ESCAPE))>;
            key-positions = <51 50>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <11 12>;
        };

        Calculator {
            bindings = <&kp C_AL_CALCULATOR>;
            key-positions = <24 25>;
        };

        f2 {
            bindings = <&kp F2>;
            key-positions = <1 2>;
        };

        f4 {
            bindings = <&kp F4>;
            key-positions = <4 3>;
        };

        f5 {
            bindings = <&kp F5>;
            key-positions = <3 5>;
        };

        f9 {
            bindings = <&kp F9>;
            key-positions = <4 5>;
        };

        Cut {
            bindings = <&kp LC(X)>;
            key-positions = <16 17>;
        };

        LCalculator {
            bindings = <&kp C_AL_CALCULATOR>;
            key-positions = <13 14>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        Main {
            bindings = <
&kp ESC           &kp N1                &kp N2        &kp N3       &kp N4            &kp N5         &kp UP_ARROW     &kp N6       &kp N7             &kp N8       &kp N9         &kp N0                   &kp BACKSPACE
&kp TAB           &kp Q                 &kp W         &kp E        &kp R             &kp T          &kp DOWN_ARROW   &kp Y        &kp U              &kp I        &kp O          &kp P                    &kp EQUAL
&kp LCTRL         &kp A                 &kp S         &mt LCTRL D  &mt LEFT_SHIFT F  &kp G          &kp LEFT_ARROW   &kp H        &mt RIGHT_SHIFT J  &mt RCTRL K  &kp L          &mt RIGHT_GUI SEMICOLON  &kp APOS
&kp LSHFT         &kp Z                 &kp X         &kp C        &kp V             &kp B          &kp RIGHT_ARROW  &kp N        &kp M              &kp COMMA    &kp DOT        &kp FSLH                 &kp RIGHT_SHIFT
&kp C_PLAY_PAUSE  &lt 4 LA(LEFT_SHIFT)  &kp LEFT_GUI  &kp LALT     &kp SPACE         &lt 1 ENTER    &kp ENTER        &lt 2 ENTER  &kp SPACE          &mo 2        &kp RIGHT_ALT  &tog 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Main";
        };

        Raise {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "Raise";
            sensor-bindings = <&scroll_encoder>;
        };

        Lower {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &studio_unlock
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Lower";
        };

        Gaming {
            display-name = "Game";
            bindings = <
&kp ESC       &kp N1     &kp N2        &kp N3        &kp N4     &kp N5       &kp UP_ARROW     &kp N6         &kp N7     &kp N8     &kp N9           &kp N0         &kp BACKSPACE
&kp TAB       &kp Q      &kp W         &kp E         &kp R      &kp T        &kp DOWN_ARROW   &kp Y          &kp U      &kp I      &kp O            &kp P          &kp BSLH
&kp LEFT_ALT  &kp A      &kp S         &kp D         &kp F      &kp G        &kp LEFT_ARROW   &kp H          &kp J      &kp K      &kp L            &kp SEMICOLON  &kp APOS
&kp LSHFT     &kp Z      &kp X         &kp C         &kp V      &kp B        &kp RIGHT_ARROW  &kp N          &kp M      &kp COMMA  &kp DOT          &kp FSLH       &kp ENTER
&kp C_MUTE    &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE  &kp LCTRL    &kp ENTER        &kp BACKSPACE  &kp ENTER  &mo 2      &kp RIGHT_SHIFT  &tog 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        NUM {
            bindings = <
&trans  &trans        &kp MINUS     &kp KP_MULTIPLY  &kp KP_DIVIDE  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &kp PLUS      &kp N7           &kp N8         &kp N9    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_ALT  &kp KP_EQUAL  &kp N4           &kp N5         &kp N6    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &kp NUMBER_1     &kp N2         &kp N3    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &kp N0        &kp PERIOD       &trans         &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
